#set $timestamp "";
#set $worker_pid "";

#log_format app_stats_log '$timestamp|PID:$worker_pid|HTTPVERSION:$http_version|SSLPROTOCOL:$ssl_protocol|HTTP_METHOD:$request_method|URI:$request_uri|CLIENT_ID:$client_id|RESPONSE_TIME:$request_time_ms|STATUS:$status'; TODO
log_format access_log_format '$time_local|IP:$remote_addr|Request:$request|status:$status';
# Initialize the stuff needed at the application level.

access_log logs/access.log access_log_format;
include api/lua_shared_cache.conf;

init_by_lua_block {

  ngx.log(ngx.DEBUG, "Starting init_by_lua_block")
  app_initializer = require "app_initializer"
  local app_config = "/Users/shahzheeb/Documents/Reference-Projects/redis-openresty-lua-api/conf/api/app_config.json"
  local ok, err = app_initializer.init(app_config)

  if not ok then
    ngx.log(ngx.ERR, "Error in initializing the app" ..err)
    ngx.exit(0)
   end

   ngx.log(ngx.DEBUG, "Successfully Initialized the app")
}

# Initialize the stuff the the worker scope
init_worker_by_lua_block {

  ngx.log(ngx.DEBUG, "Starting init_worker_by_lua_block")
}

server{
  server_name 127.0.0.1;

  listen 8080;
  ssl_verify_client optional;

  include api/accounts_api.conf;

}

